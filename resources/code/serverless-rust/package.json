{
  "name": "sls-rust",
  "version": "0.1.0",
  "scripts": {
    "build": "npm run build:executable && npm run build:rename",
    "build:executable": "cargo build --release --target x86_64-unknown-linux-musl --features vendored",
    "build:rename": "npm run build:clean && mkdir -p ./target/cdk/release && cp ./target/x86_64-unknown-linux-musl/release/sls_rust ./target/cdk/release/bootstrap",
    "build:archive": "zip ./target/cdk/release/lambda.zip ./target/cdk/release/bootstrap",
    "build:clean": "rm -r ./target/cdk/release || echo '[build:clean] No existing release found.'",
    "watch": "tsc -w",
    "deploy": "npm run build && npm run cdk:deploy",
    "cdk": "cdk",
    "cdk:synth": "cdk synth # emits the synthesized CloudFormation template",
    "cdk:diff": "cdk diff # compare deployed stack with current state",
    "cdk:deploy": "[[ $CI == 'true' ]] && CDK_APPROVAL='never' || CDK_APPROVAL='broadening'; cdk deploy --require-approval $CDK_APPROVAL $npm_package_name # deploy this stack to your default AWS account/region",
    "cdk:bootstrap": "cdk bootstrap aws://$(aws sts get-caller-identity | jq -r .Account)/$AWS_REGION # bootstrap necessary resources on first usage of CDK in a region",
    "prettier": "prettier --write '**/{bin,lib,src,tst}/*.ts'"
  },
  "devDependencies": {
    "aws-cdk": "1.64.1",
    "@aws-cdk/core": "1.64.1",
    "@aws-cdk/assert": "1.64.1",
    "@aws-cdk/aws-apigateway": "1.64.1",
    "@aws-cdk/aws-lambda": "1.64.1",
    "@aws-cdk/aws-dynamodb": "1.64.1",
    "@aws-cdk/aws-events-targets": "1.64.1",
    "@aws-cdk/aws-events": "1.64.1",
    "@types/node": "14.11.2",
    "ts-node": "9.0.0",
    "tsconfig-paths": "3.9.0",
    "typescript": "4.0.3",
    "prettier": "2.1.2"
  },
  "dependencies": {},
  "description": "Deployment tools for the Serverless Rust application.",
  "directories": {
    "lib": "deployment"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
