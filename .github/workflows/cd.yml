name: cd

# Check out https://help.github.com/en/articles/workflow-syntax-for-github-actions for documentation on Actions.
on:
  push:
    paths:
      - 'posts/**'
      - 'resources/**'
      - 'src/**'
      - 'templates/**'
      - '.github/workflows/cd.yml'

jobs:
  cd:
    runs-on: ubuntu-16.04
    env:
      GHC_VERSION: '8.6.5'
      CABAL_VERSION: '3.0'
    steps:
      - uses: actions/checkout@v1

      # Setup tooling
      - name: Setup stack
        uses: mstksg/setup-stack@v1
      - name: Setup GHC 8.6.5
        uses: actions/setup-haskell@v1
        with:
          ghc-version: ${{env.GHC_VERSION}}
          cabal-version: ${{env.CABAL_VERSION}}
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Install compass for scss
        run: |
          gem install compass

      # Enable cache for cabal
      - uses: actions/cache@v1
        name: Cache .stack-work
        with:
          path: .stack-work
          key: ${{ runner.os }}-${{env.GHC_VERSION}}-${{ hashFiles('stack.yaml') }}-stack-work
      - uses: actions/cache@v1
        name: Cache ~/.cabal/store
        with:
          path: ~/.cabal/store
          key: ${{ runner.os }}-${{env.GHC_VERSION}}-${{ hashFiles('stack.yaml') }}-cabal-store
      - uses: actions/cache@v1
        name: Cache stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{env.GHC_VERSION}}-${{ hashFiles('stack.yaml') }}-stack


      - name: Build dependencies
        run: |
          stack --system-ghc build --fast --no-terminal --skip-ghc-check --only-dependencies

      - name: Build executable
        run: |
          stack --system-ghc build --fast --no-terminal --skip-ghc-check
          stack --system-ghc exec -- hakyll-site clean
          stack --system-ghc exec -- hakyll-site build


      - name: Upload site to S3 and purge CloudFront cache
        if: github.ref == 'refs/heads/master'
        run: |
          # Optimize the CSS output
          sass resources/scss/app.scss:_site/app.css --style compressed

          # Upload the site to the S3 bucket
          aws s3 sync _site s3://codetalk.io --delete

          # Clear the aggressive CloudFlare cache
          curl -X DELETE "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE}/purge_cache" \
            -H "Authorization: Bearer ${CLOUDFLARE_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}'
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
